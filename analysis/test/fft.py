#!/usr/bin/env python3
from collections import Counter
import matplotlib.pyplot as plt

bases = ['A', 'C', 'G', 'T']

myfile = "94N_unbound_cyc4.txt"

all_freq = {'A':[0]*95, 'C':[0]*95, 'G':[0]*95, 'T':[0]*95}

# # Counts the number of reads
# reads = 0
# with open(myfile) as infile:
#     for line in infile:
#         reads += 1

# # Figures out how common each base is at each position of the sequence
# read = 0
# with open(myfile) as infile:
#     for line in infile:
#         seq = list(line) # Converts string to list so that I can manipulate it easily
#         freq = {} # Like all_freq, but just for this read
#         for base in bases:
#             freq[base] = [1 if ii == base else 0 for ii in seq]
#         # Adds frequencies to all_freq
#         for key in all_freq:
#             all_freq[key] = [x + y for x, y in zip(all_freq[key], freq[key])]
#         print(100*(read/reads)) # progress bar of what % of reads we've gone through so far
#         read += 1

# print(all_freq)

all_freq = {'T': [1287716, 1225194, 1156682, 1110689, 1125732, 1142366, 1312209, 1201577, 1219023, 1282819, 1213248, 1216957, 1222767, 1255513, 1334470, 1247516, 1184918, 1245647, 1249723, 1249977, 1248308, 1274070, 1269002, 1312442, 1224406, 1250947, 1281975, 1224402, 1237895, 1233339, 1250952, 1214163, 1258786, 1262097, 1243813, 1230019, 1202457, 1206780, 1218617, 1184308, 1256999, 1242201, 1240473, 1218974, 1220485, 1239527, 1202326, 1206995, 1192759, 1199801, 1197279, 1226114, 1195686, 1164875, 1177681, 1144133, 1188561, 1176952, 1119332, 1167358, 1091217, 1173746, 1141398, 1126776, 1132966, 1136557, 1165058, 1144343, 1129104, 1104756, 1135233, 1118712, 1097553, 1092249, 1116829, 1095057, 1068936, 1126911, 1141726, 1117717, 1072563, 1079604, 1045069, 1084288, 1048058, 1059161, 1039406, 1049951, 1095205, 1129080, 1066431, 1009795, 1003395, 842672], 'A': [1025169, 977209, 966532, 978617, 1022877, 1018577, 950455, 1050233, 999900, 903620, 975640, 1002422, 958513, 969876, 919187, 974867, 1028301, 970129, 967426, 977682, 975438, 983726, 976479, 942146, 939843, 955822, 935225, 994122, 964958, 977598, 950789, 987647, 918337, 966224, 1001456, 945408, 1002184, 956591, 918085, 989465, 931434, 949450, 939310, 977908, 935712, 886446, 908305, 935557, 948040, 989111, 995794, 928858, 946906, 939870, 923605, 935487, 934071, 941726, 976633, 935871, 988358, 940275, 946830, 892375, 925733, 946199, 884106, 871380, 900526, 934561, 910426, 923916, 918742, 957841, 889550, 869274, 908671, 856815, 861528, 848968, 875198, 841322, 910715, 837335, 817250, 830352, 800814, 771508, 727859, 653357, 765726, 691051, 717763, 884458], 'C': [976734, 961759, 952384, 981149, 950064, 932299, 878997, 873365, 910952, 962208, 944622, 910813, 941041, 916839, 903297, 915220, 922571, 908932, 894198, 900967, 900313, 862119, 871992, 869479, 918923, 888188, 887351, 917047, 906234, 900159, 887347, 880806, 916464, 879848, 861053, 883125, 908262, 894962, 925859, 898223, 887628, 884226, 875566, 867562, 914922, 915297, 929899, 891273, 862154, 886750, 829245, 851146, 885384, 897901, 924406, 932826, 931274, 920268, 911964, 930104, 899638, 901464, 935898, 921595, 913290, 891632, 886465, 913500, 931848, 896315, 892141, 855743, 915655, 874208, 902501, 929953, 905416, 924959, 918439, 922005, 932327, 910726, 886119, 891200, 905321, 908506, 920199, 946691, 953024, 1041464, 1035182, 1038775, 983839, 854096], 'G': [1209955, 1335413, 1423966, 1429120, 1400902, 1406333, 1357914, 1374400, 1369700, 1350928, 1366065, 1369383, 1377254, 1357347, 1342621, 1361972, 1363785, 1374867, 1388228, 1370949, 1375516, 1379660, 1382102, 1375508, 1416335, 1404526, 1394979, 1363940, 1390423, 1388219, 1410482, 1416959, 1405988, 1391406, 1393253, 1441023, 1386672, 1441242, 1437014, 1427579, 1423514, 1423698, 1444226, 1435131, 1428456, 1458305, 1459045, 1465750, 1496622, 1423913, 1477257, 1493457, 1471599, 1496929, 1473883, 1487129, 1445669, 1460629, 1491646, 1466242, 1520362, 1484090, 1475449, 1558829, 1527586, 1525187, 1563946, 1570352, 1538097, 1563943, 1561775, 1601204, 1567625, 1575277, 1590695, 1605291, 1616552, 1590890, 1577882, 1610884, 1619469, 1667923, 1657672, 1686752, 1728946, 1701556, 1739156, 1731423, 1723487, 1675674, 1632236, 1759954, 1794578, 1918347]}

plt.plot(all_freq['A'])
plt.plot(all_freq['C'])
plt.plot(all_freq['G'])
plt.plot(all_freq['T'])

plt.show()
